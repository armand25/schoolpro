<?php

namespace admin\CmsBundle\Repository;
use \admin\UserBundle\Types\TypeEtat;

/**
 * RubriqueRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class RubriqueRepository extends \Doctrine\ORM\EntityRepository
{
       /*
     * Retourne un ou tous les profils si $idRubrique = 0
     * @param int $idRubrique
     * @return array
     */
    public function getAllOrOneRubrique($idRubrique) {
        $idRubriqueQuery = (int) $idRubrique;
        $qb = $this->createQueryBuilder('p')
                ->where('p.actifRubrique != ' . TypeEtat::SUPPRIME)
                ;
        if($idRubrique > 0){
            $qb->andWhere('p.id =:idRubrique')
                    ->setParameter('idRubrique', $idRubriqueQuery);
            
        }
        return $qb->getQuery()->getResult();
    }
    
       /*
     * Retourne un ou tous les profils si $idRubrique = 0
     * @param int $idRubrique
     * @return array
     */
    public function getAllOrOneRubriqueActif($idRubrique) {
        $idRubriqueQuery = (int) $idRubrique;
        $qb = $this->createQueryBuilder('p')
                ->leftJoin('p.rubriques', 'r')                
                ->where('p.actifRubrique = ' . TypeEtat::ACTIF)                
                ->andWhere('r.actifRubrique = ' . TypeEtat::ACTIF)
                ;
        if($idRubrique > 0){
            $qb->andWhere('p.id =:idRubrique')
            
                    ->setParameter('idRubrique', $idRubriqueQuery);
            
        }
        //var_dump($qb->getDQL());exit;
       
        return $qb->getQuery()->getResult();
    }
    
    /*
     * Retourne un ou tous les profils si $idRubrique = 0
     * @param int $idRubrique
     * @return array
     */
    public function getAllSousRubriqueActif($idRubrique) {
        $idRubriqueQuery = (int) $idRubrique;
        $qb = $this->createQueryBuilder('p')
                ->leftJoin('p.rubriques', 'r')                
                ->where('p.actifRubrique = ' . TypeEtat::ACTIF)                
                ->andWhere('r.actifRubrique = ' . TypeEtat::ACTIF)
                ;
        if($idRubrique > 0){
            $qb->andWhere('p.id =:idRubrique')
            
                    ->setParameter('idRubrique', $idRubriqueQuery);
            
        }
        //var_dump($qb->getDQL());exit;
       
        return $qb->getQuery()->getResult();
    }
    /*
     * Retourne un ou tous les profils si $idRubrique = 0
     * @param int $idRubrique
     * @return array
     */
    public function getAllOrOneRubriqueSousActif($idRubrique) {
        $idRubriqueQuery = (int) $idRubrique;
        $dql = "SELECT p FROM admin\CmsBundle\Entity\Rubrique p LEFT JOIN p.rubrique r "
                . "WHERE p.actifRubrique = :etat AND r.actifRubrique = :etat2 AND r.id =:idRubrique";

        $query = $this->_em->createQuery($dql);
        $query->setParameter('etat', TypeEtat::ACTIF);
        $query->setParameter('etat2', TypeEtat::ACTIF);
        $query->setParameter('idRubrique', $idRubriqueQuery);
       // var_dump($query->getResult());exit;
        return $query->getResult();
        
    }
    
       /*
     * Retourne un ou tous les profils si $idRubrique = 0
     * @param int $idRubrique
     * @return array
     */
    public function getAllOrOneRubriqueArticleActif($idRubrique) {
        $idRubriqueQuery = (int) $idRubrique;
        $qb = $this->createQueryBuilder('p')
                ->leftJoin('p.articles', 'a')
                ->where('p.actifRubrique = ' . TypeEtat::ACTIF)                
                ;
        if($idRubrique > 0){
            $qb->andWhere('p.id =:idRubrique')
            
                    ->setParameter('idRubrique', $idRubriqueQuery);
            
        }
       
        return $qb->getQuery()->getResult();
    }
    
    /*
     * Retourne tous les rubriques
     * @return type
     */
    public function getAllRubrique() {
        $qb = $this->createQueryBuilder('e')
                ->where('e.actifRubrique != ' . TypeEtat::SUPPRIME);
               // ->orderBy('e.typeRubrique', 'ASC');
        return $qb->getQuery()->getResult();
    }
    /*
     * Retourne tous les rubriques
     * @return type
     */
    public function getAllRubriqueEtablissement($idEtabl) {
        
        $qb = $this->createQueryBuilder('r')
                ->innerJoin('r.etablissement', 'e')
                ->where('r.actifRubrique != ' . TypeEtat::SUPPRIME)
                ->andWhere('e.id = '.$idEtabl);
               // ->orderBy('e.typeRubrique', 'ASC');
        return $qb->getQuery()->getResult();
    }
    
    
    /*
     * Retourne tous les profils
     * @return type
     */
    public function getAllRubriqueActif() {
        $qb = $this->createQueryBuilder('e')
                ->where('e.actifRubrique = ' . TypeEtat::ACTIF);
               // ->orderBy('e.typeRubrique', 'ASC');
        return $qb->getQuery()->getResult();
    }
    
    

}
