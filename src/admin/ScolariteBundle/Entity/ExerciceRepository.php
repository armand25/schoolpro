<?php

namespace admin\ScolariteBundle\Entity;

/**
 * ExerciceRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ExerciceRepository extends \Doctrine\ORM\EntityRepository
{
     use \admin\UserBundle\ControllerModel\paramUtilTrait;
    /**
     * Retourne un ou tous les exercices si $idExercice = 0
     * @param int $idExercice
     * @return array
     */
    public function getAllOrOneExercice($idExercice) {
        $idExerciceQuery = (int) $idExercice;
        $qb = $this->createQueryBuilder('p')
                ->where('p.etatExercice != ' . TypeEtat::SUPPRIME)
                ;
        if($idExercice > 0){
            $qb->andWhere('p.id =:idExercice')
                    ->setParameter('idExercice', $idExerciceQuery);
            
        }
        return $qb->getQuery()->getResult();
    }
    
    /*
     * Retourne tous les exercices
     * @return type
     */
    //    public function getAllExercice($estEns) {
    //        $qb = $this->createQueryBuilder('e')
    //                ->where('e.etatExercice != ' . TypeEtat::SUPPRIME);
    //               // ->orderBy('e.typeExercice', 'ASC');
    //        return $qb->getQuery()->getResult();
    //    }
    public function getAllExercice($idepreuve) {
        $dql = "SELECT e FROM " . $this->scolariteBundle . "Exercice e INNER JOIN e.epreuve ep "
                . " WHERE ep.id =:idepreuve ";

        $query = $this->_em->createQuery($dql);
        $query->setParameter('idepreuve', $idepreuve);

        return $query->getResult();
    } 
    
    
    /*
     * Retourne tous les exercices
     * @return type
     */
    public function getAllActifExercice() {
        $qb = $this->createQueryBuilder('e')
                ->where('e.etatExercice = ' . TypeEtat::ACTIF);
               // ->orderBy('e.typeExercice', 'ASC');
        return $qb->getQuery()->getResult();
    }
    
}
