<?php

namespace admin\EconomatBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * PlanComptableRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PlanComptableRepository extends EntityRepository
{
    
     public function compteExiste($compte) {
        $qb = $this->createQueryBuilder('p');
        $qb->where('p.compte = :compte');
        $qb->setParameter('compte', $compte);
        $result = $qb->getQuery()->getResult();
        $nb = count($result);
        if ($nb != 0)
            return 1;
        else
            return 0;
    }

    public function libExiste($lib) {
        $qb = $this->createQueryBuilder('p');
        $qb->where('p.libelle = :libelle');
        $qb->setParameter('libelle', $lib);
        $result = $qb->getQuery()->getResult();
        $nb = count($result);
        if ($nb != 0)
            return 1;
        else
            return 0;
    }

    public function seguceExiste($lib) {
        $qb = $this->createQueryBuilder('p');
        $qb->where('p.liea = :liea');
        $qb->setParameter('liea', $lib);
        $result = $qb->getQuery()->getResult();
        $nb = count($result);
        if ($nb != 0)
            return 1;
        else
            return 0;
    }

    public function getListePlan($total, $page, $articles_per_page) {
        $param = array();

        $sql = "SELECT p
                    FROM adminEconomatBundle:Plancomptable p ";
        $sql.=" WHERE 1=1 AND p.suppr = :suppr and p.liea!= :liea";


        $query = $this->_em->createQuery($sql)
                ->setParameters(array("suppr" => 0,"liea"=>7));
        //$limit==0 ? $sql.='' :  $query->setMaxResults($limit); 
        $query->setFirstResult(($page * $articles_per_page) - $articles_per_page);
        $query->setMaxResults($articles_per_page);
        return $query->getResult();
    }

    public function getListeCpte($cas, $num) {

        /**
         * liea les valeurs possibles
         *  liea = 0  => compte comptable normal
         *  liea = 1  => compte comptable des caisses
         *  liea = 2  => compte comptable cheques utb
         *  liea = 3  => compte comptable cheques certifies utb
         *  liea = 4  => compte comptable cheques certifies confrère
         *  liea = 5  => compte comptable seguce
         *  liea = 6  => compte comptable regul surplus
         *  liea = 8  => compte comptable regul manquant
         */
        /*
         * 
          cas  =0 Compte Caisse
          =1 Compte Chèque UTB
          =2 Compte Chèque Certifié UTB
          =3 Compte Chèque Certifié Confère
          =4 Compte SEGUCE
          =5 Compte REGUL Surplus
          =6 Compte REGUL Manquant
          =7 Compte VIR Fact
         * 
         */


        $sqlsuite = ' WHERE  p.liea = 7 AND p.compte = :cpte';
        $compte = '';

        if ($cas == '1') {
            $compte = 'CPTE_CAISSE';
        } elseif ($cas == '2') {
            $compte = 'CPTE_CU';
        } elseif ($cas == '3') {
            $compte = 'CPTE_CCU';
        } elseif ($cas == '4') {
            $compte = 'CPTE_CCC';
        } elseif ($cas == '5') {
            $compte = 'CPTE_SEG';
        } elseif ($cas == '6') {
            $compte = 'CPTE_RGS';
        } elseif ($cas == '8') {
            $compte = 'CPTE_RGM';
        } elseif ($cas == '9') {
            $compte = 'CPTE_MF';
        } elseif ($cas == '10') {
            $compte = 'CPTE_ESR';
        } elseif ($cas == '11') {
            $compte = 'CPTE_CLIENT';
        } elseif ($cas == '12') {
            $compte = 'CPTE_CRED';
        } elseif ($cas == '13') {
            $compte = 'CPTE_VIRFACT';
        } elseif ($cas == '0') {
            $compte = 'CPTE_FIX';
        }

        $sql = " SELECT DISTINCT p.compte,p.libelle," . $cas . " as cas," . $num . " as num
                 FROM adminEconomatBundle:PlanComptable p ";

        $sql.= $sqlsuite;

        $query = null;
        $query = $this->_em->createQuery($sql);
        $query->setParameter('cpte', $compte);

        return $query->getResult();
    }
}
