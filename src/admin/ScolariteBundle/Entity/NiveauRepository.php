<?php

namespace admin\ScolariteBundle\Entity;
use \admin\UserBundle\Types\TypeEtat;

/**
 * NiveauRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class NiveauRepository extends \Doctrine\ORM\EntityRepository
{
    
use \admin\UserBundle\ControllerModel\paramUtilTrait;    
       /*
     * Retourne un ou tous les niveaus si $idNiveau = 0
     * @param int $idNiveau
     * @return array
     */
    public function getAllOrOneNiveau($idNiveau) {
        $idNiveauQuery = (int) $idNiveau;
        $qb = $this->createQueryBuilder('p')
                ->where('p.etatNiveau != ' . TypeEtat::SUPPRIME)
                ;
        if($idNiveau > 0){
            $qb->andWhere('p.id =:idNiveau')
                    ->setParameter('idNiveau', $idNiveauQuery);
            
        }
        return $qb->getQuery()->getResult();
    }
    
    /*
     * Retourne tous les niveaux
     * @return type
     */
//    public function getAllNiveau() {
//        $qb = $this->createQueryBuilder('e')
//                ->where('e.etatNiveau != ' . TypeEtat::SUPPRIME);
//               // ->orderBy('e.typeNiveau', 'ASC');
//        return $qb->getQuery()->getResult();
//    }
    

    public function getAllNiveau() {
    $sql =  ' SELECT DISTINCT d.id, d.libelleNiveau, d.etatNiveau, d.descriptionNiveau '
                   .' FROM '.$this->scolariteBundle.'Niveau d '
                   .' WHERE  d.etatNiveau != :cid '
                   .' ORDER BY d.libelleNiveau DESC';

            $query = $this->_em->createQuery($sql);
            $query->setParameter('cid', 2);
            return $query->getResult();
    }    
    
    /*
     * Retourne tous les niveaux actifs
     * @return type
     */
    public function getAllActifNiveau() {
        $qb = $this->createQueryBuilder('e')
                ->where('e.etatNiveau = ' . TypeEtat::ACTIF);
               // ->orderBy('e.typeNiveau', 'ASC');
        return $qb->getQuery()->getResult();
    }
}
