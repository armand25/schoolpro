<?php

namespace admin\ScolariteBundle\Entity;

/**
 * PresenceRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PresenceRepository extends \Doctrine\ORM\EntityRepository
{
    
     public function getListeRecherchePresence($idens='', $classe='',$ideleve='', $iddecoupage ='0',$datedeb, $datefin,$annee,$typepresence='',$nbParPage = 20, $pageActuelle = 1,$siDetail='',$idPres='',$ansEnCours='') {
            
        $param = array();
      $nbTotal= 10000;
      $paramdeb = $datedeb;//implode('/', array_reverse( explode('-',$datedeb) ) ) ;
      $paramfin =$datefin; //implode('/', array_reverse( explode('-',$datefin) ) ) ;
      if($siDetail !=''){
           $sql = " SELECT dp.id,dp.siPresent, e.nom as nom_el,e.id as idel, e.prenoms as prenom_el, u.nom as nom_ens,f.id as idens, u.prenoms as prenom_ens, p.datePresence, d.libelleDecoupage  ";                          
      } else{
          
        $sql = " SELECT DISTINCT p.id,  u.nom as nom_ens,f.id as idens, u.prenoms as prenom_ens, p.datePresence, d.libelleDecoupage  ";                        

       }
         $sql .= "FROM   adminScolariteBundle:Presence p ";
                 $sql .= " INNER JOIN p.decoupage d ";  
                 
                 $sql .= " INNER JOIN p.fairecours f ";              
                 $sql .= " INNER JOIN f.utilisateur u ";              
                 $sql .= " INNER JOIN f.classe c ";              
                 $sql .= " INNER JOIN f.anneescolaire a ";
                 
           if($siDetail !=''){
             $sql .= " INNER JOIN p.detailpresences dp ";  
                 $sql .= " INNER JOIN dp.setrouve s ";  
                 $sql .= " INNER JOIN s.eleve e "; 
           }

           $sql .= " WHERE a.id = :anneescolaire and 1=1 ";        
            /**  debut critère recherche  * */
            // ( ($deb == null) || ($deb == 0) )? $sql.="' : $sql.=' AND  o.dateValeur >= :deb and o.dateValeur <= :fin ';
                (  $datedeb != 0 && $datedeb != "" ) ?  $sql.=" AND  e.dateInscription >= " . " '" . $paramdeb . "' "  : $sql.='';
                (  $datefin != 0 && $datefin != "" ) ?  $sql.=" AND  e.dateInscription <= " . " '" . $paramfin . "' "  : $sql.='';
             
         ( $idens == '') ? $sql .= '' : $sql .= ' AND f.id = :idens';
        
         ( $classe == '') ? $sql.='' : $sql.=' AND c.id = :classe ';
         ( $idPres == '') ? $sql.='' : $sql.=' AND p.id = :idpre ';
         ( $ideleve != '' && $siDetail!='' ) ? $sql.=' AND e.id = :ideleve ':$sql.='' ;
         ( $iddecoupage == '') ? $sql.='' : $sql.=' AND d.id = :iddecoupage ';
         ( $typepresence == '') ? $sql.='' : $sql.=' AND p.typePresence = :typepresence ';
         
        /** Fin critère recherche * */
        $sql.=' ORDER BY p.id DESC';
       // var_dump($sql,$prenom);exit;
        /**  debut parametres  * */
        
      //  var_dump($sql);exit;
        
        if ($idPres != '') {
            $param['idpre'] = $idPres;
            
           // 
        }
        if ($idens != '') {
            $param['idens'] = $idens;
            
           // 
        }
        
        if ($ideleve != '' && $siDetail!='' ) {
            $param['ideleve'] = $ideleve;
            
           // 
        }
        if ($classe != '') {
            $param['classe'] = $classe;
           // 
        }
        //var_dump($typepresence);exit;
        if ($typepresence != '') {
            $param['typepresence'] = $typepresence;
           // 
        }
     //   var_dump($sql);exit
        if($iddecoupage !=''){            
                $param['iddecoupage'] = $iddecoupage; 
                // var_dump($param['prenoms']);exit;
        }
        $param['anneescolaire']=$annee;
        
       // var_dump($sql);exit;
        $pageActuelleInt = (int) $pageActuelle;
        $nbParPageInt = (int) $nbParPage;
        if ($pageActuelleInt < 1) {
            $pageActuelleInt = 1;
        }
        if ($nbParPageInt < 1) {
            $nbParPageInt = 20;
        }

        $nbTotalPage = (int) ceil($nbTotal / $nbParPage);
        if ($nbTotalPage < 1) {
            $nbTotalPage = 1;
        }
        if ($pageActuelleInt > $nbTotalPage) {
            $pageActuelleInt = $nbTotalPage;
        }
         	
       $query = $this->_em->createQuery($sql);
       $query->setParameters($param);

        //var_dump($query->getSQL());exit;
        return $query->getResult();
        
    } 
    
}
