<?php

namespace admin\EconomatBundle\Entity;

use admin\UserBundle\Types\TypeEtat;

/**
 * ProduitRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ProduitRepository extends \Doctrine\ORM\EntityRepository
{
    
    use \admin\EconomatBundle\EntityModel\entityTrait;
    
    /**
     * Retourne tous les produits.
     *
     * @return type
     */
    public function getAllProduit()
    {
        $qb = $this->createQueryBuilder('r')
                ->where('r.etatProduit != '.TypeEtat::SUPPRIME)
                ->orderBy('r.id', 'ASC');

        return $qb->getQuery()->getResult();
    }

    public function getOneProduit($id)
    {
        $qb = $this->createQueryBuilder('p')
				->select('p, c,f,i')
				->leftJoin('p.categorie', 'c')	
				->leftJoin('p.fournisseur', 'f')
                                ->leftJoin('p.imagepros', 'i')
                ->where('p.id = '.$id);
        return $qb->getQuery()->getResult();
    }	

    
    public function getCategorieProduit($categorie) {
        
            $sql =  ' SELECT DISTINCT p.id, p.nomProduit, p.montantHtAchat, p.tauxTva '
                   .' FROM '.$this->stockBundle.'Produit p inner join p.categorie c '
                   .' WHERE  c.id = :cid '
                   .' ORDER BY p.nomProduit DESC';

            $query = $this->_em->createQuery($sql);
            $query->setParameter('cid', $categorie);
            return $query->getResult();
    }
	
    public function getProduit($idProduit) {        
            $sql =  ' SELECT p.id, p.montantHtVente, p.tauxTva, p.autreTaxe, p.nomProduit, p.codeProduit, p.montantHtAchat '
                   .' FROM '.$this->stockBundle.'Produit p'
                   .' WHERE  p.id = :pid ';
            
            $query = $this->_em->createQuery($sql);
            $query->setParameter('pid', $idProduit);
           
            return $query->getOneOrNullResult();
            
    }
    
}
