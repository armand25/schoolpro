<?php

namespace admin\CmsBundle\Repository;
use \admin\UserBundle\Types\TypeEtat;


/**
 * MenuRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class MenuRepository extends \Doctrine\ORM\EntityRepository
{
       /*
     * Retourne un ou tous les profils si $idMenu = 0
     * @param int $idMenu
     * @return array
     */
    public function getAllOrOneMenu($idMenu) {
        $idMenuQuery = (int) $idMenu;
        $qb = $this->createQueryBuilder('p')
                ->where('p.actifMenu != ' . TypeEtat::SUPPRIME)
                ;
        if($idMenu > 0){
            $qb->andWhere('p.id =:idMenu')
                    ->setParameter('idMenu', $idMenuQuery);
            
        }
        return $qb->getQuery()->getResult();
    }
    
    
    /*
     * Retourne un ou tous les profils si $idMenu = 0
     * @param int $idMenu
     * @return array
     */
    public function getAllOrOneMenuSousActif($idMenu) {
        $idMenuQuery = (int) $idMenu;
        $dql = "SELECT p FROM admin\CmsBundle\Entity\Menu p LEFT JOIN p.menu r "
                . "WHERE p.actifMenu = :etat AND r.actifMenu = :etat2 AND r.id =:idMenu";

        $query = $this->_em->createQuery($dql);
        $query->setParameter('etat', TypeEtat::ACTIF);
        $query->setParameter('etat2', TypeEtat::ACTIF);
        $query->setParameter('idMenu', $idMenuQuery);
       // var_dump($query->getResult());exit;
        return $query->getResult();
        
    }
    
       /*
     * Retourne un ou tous les profils si $idMenu = 0
     * @param int $idMenu
     * @return array
     */
    public function getAllOrOneMenuArticleActif($idMenu) {
        $idMenuQuery = (int) $idMenu;
        $qb = $this->createQueryBuilder('p')
                ->leftJoin('p.articles', 'a')
                ->where('p.actifMenu = ' . TypeEtat::ACTIF)                
                ;
        if($idMenu > 0){
            $qb->andWhere('p.id =:idMenu')
            
                    ->setParameter('idMenu', $idMenuQuery);
            
        }
       
        return $qb->getQuery()->getResult();
    }
    
    /*
     * Retourne tous les menu
     * @return type
     */
    public function getAllMenu() {
        $qb = $this->createQueryBuilder('m')
                ->where('m.etatMenu != ' . TypeEtat::SUPPRIME);
               // ->orderBy('e.typeMenu', 'ASC');
        return $qb->getQuery()->getResult();
    }
    /*
     * Retourne tous les menu
     * @return type
     */
    public function getAllMenuEtablissement($idEtabl) {
        $qb = $this->createQueryBuilder('m')
                ->innerJoin('m.etablissement', 'e')
                ->where('m.etatMenu != ' . TypeEtat::SUPPRIME)
                ->andWhere('e.id= ' . $idEtabl);
               // ->orderBy('e.typeMenu', 'ASC');
        return $qb->getQuery()->getResult();
    }
    
    
    /*
     * Retourne tous les profils
     * @return type
     */
    public function getAllMenuActif() {
        $qb = $this->createQueryBuilder('e')
                ->where('e.actifMenu = ' . TypeEtat::ACTIF);
               // ->orderBy('e.typeMenu', 'ASC');
        return $qb->getQuery()->getResult();
    }
    
    /*
     * Retourne tous les profils
     * @return type
     */
    public function getAllMenuEtablissementActif($idEtabl) {
        $qb = $this->createQueryBuilder('m')
                ->innerJoin('m.etablissement', 'e')
                ->where('m.etatMenu = ' . TypeEtat::ACTIF)
                ->andWhere('e.id= ' . $idEtabl);
               // ->orderBy('e.typeMenu', 'ASC');
        return $qb->getQuery()->getResult();
    }
    
    

}
